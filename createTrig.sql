set schema FN71839;
-- First trigger
CREATE TABLE AUDIT(CTIME TIMESTAMP, TEXT VARCHAR(200));

CREATE TRIGGER TRIG_UPD_EMP
    AFTER UPDATE OF SALARY ON EMPLOYEES
    REFERENCING OLD AS O NEW AS N
    FOR EACH ROW
    WHEN (O.SALARY != N.SALARY)
    BEGIN
      DECLARE V_TEXT VARCHAR(200);
      SET V_TEXT = USER || ' EMPL_ID = ' || O.EMPL_ID
                        || ' OLD SALARY = ' || CHAR(O.SALARY)
                        || 'NEW SALARY = ' || CHAR(N.SALARY);
      INSERT INTO AUDIT VALUES(CURRENT_TIMESTAMP, V_TEXT);
    END;

--Second trigger
CREATE TABLE TRIG_INSERTION(
    MESSAGE VARCHAR(100)
);
CREATE TRIGGER TRIG_INS_ORDER
    BEFORE INSERT ON ORDERS
    FOR EACH ROW BEGIN
        INSERT INTO TRIG_INSERTION VALUES ('added new order');
END;

--Third trigger
CREATE TABLE NEW_SUPPLIES(
    SUPP_MASSAGE VARCHAR(250)
);

CREATE TRIGGER TRIG_NEW_SUPPLIES
    AFTER INSERT ON SUPPLIES
    REFERENCING NEW AS N
    FOR EACH ROW
    INSERT INTO NEW_SUPPLIES(SUPP_MASSAGE)
    VALUES ('New delivery was made to branch: ' || N.BRANCH_NAME ||
                      ' , By company: ' || N.COMPANY_NAME || '. Cost:' || CHAR(N.DELIVERY_PRICE));


INSERT INTO SUPPLIES(BRANCH_NAME, COMPANY_NAME, DELIVERY_PRICE)  VALUES ('Chef','Верея',675.8);

SELECT *
    FROM NEW_SUPPLIES;

--Fourth trigger
CREATE TABLE trigger_test(
    message VARCHAR(100)
);

CREATE TRIGGER TRIG_INSERT_EMP
    AFTER DELETE ON  EMPLOYEES
    FOR EACH ROW BEGIN
        INSERT INTO trigger_test VALUES ('employee has been deleted');
END;

DROP TRIGGER TRIG_INSERT_EMP;
SELECT *
FROM trigger_test;